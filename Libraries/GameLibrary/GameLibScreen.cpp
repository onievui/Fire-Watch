//__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/
//! @file   GameLibSystem.cpp
//!
//! @brief  システム関連の機能のソースファイル
//!
//! @date   2018/10/20
//!
//! @author onievui
//__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/

// ヘッダファイルの読み込み ================================================
#include "GameLibScreen.h"

#include <DxLib.h>




// <Screenクラス> **************************************************************

// メンバ関数の定義 ========================================================
//------------------------------------------------------------------
//! @brief デフォルトコンストラクタ
//!
//! @param[in] なし
//------------------------------------------------------------------
Screen::Screen()
	: m_size(Size2D{ 0.0f, 0.0f })
	, m_position(Point2D{ 0.0f, 0.0f })
{
	int screen_width;
	int screen_height;
	int screen_color_bit_depth;

	GetScreenState(&screen_width, &screen_height, &screen_color_bit_depth);
	
	m_size.width  = static_cast<float>(screen_width);
	m_size.height = static_cast<float>(screen_height);
}



//------------------------------------------------------------------
//! @brief デストラクタ
//------------------------------------------------------------------
Screen::~Screen()
{
}



//------------------------------------------------------------------
//! @brief ワールド座標からスクリーン座標への変換
//!
//! @param[in] world_position ワールド座標
//!
//! @return スクリーン座標
//------------------------------------------------------------------
Point2D Screen::WorldToScreenPoint(const Point2D& world_point)
{
	Point2D screen_point;
	screen_point.x = world_point.x - m_position.x;
	screen_point.y = world_point.y - m_position.y;

	return screen_point;
}



//------------------------------------------------------------------
//! @brief スクリーン座標からワールド座標への変換
//!
//! @param[in] screen_position スクリーン座標
//!
//! @return スクリーン座標
//------------------------------------------------------------------
Point2D Screen::ScreenToWorldPoint(const Point2D& screen_point)
{
	Point2D world_point;
	world_point.x = screen_point.x - m_position.x;
	world_point.y = screen_point.y - m_position.y;

	return world_point;
}



//------------------------------------------------------------------
//! @brief スクリーンのサイズの取得
//!
//! @param[in] なし
//!
//! @return スクリーンのサイズ
//------------------------------------------------------------------
const Size2D& Screen::GetScreenSize()
{
	return m_size;
}



//------------------------------------------------------------------
//! @brief スクリーンの座標の取得
//!
//! @param[in] なし
//!
//! @return スクリーンの座標
//------------------------------------------------------------------
const Point2D& Screen::GetScreenPosition()
{
	return m_position;
}



//------------------------------------------------------------------
//! @brief スクリーンの座標の設定
//!
//! @param[in] なし
//!
//! @return スクリーンの座標
//------------------------------------------------------------------
void Screen::SetScreenPosition(const Point2D& position)
{
	m_position = position;
}



//------------------------------------------------------------------
//! @brief スクリーンの幅の取得
//!
//! @param[in] なし
//!
//! @return スクリーンの幅
//------------------------------------------------------------------
float Screen::Width()
{
	return m_size.width;
}



//------------------------------------------------------------------
//! @brief スクリーンの高さの取得
//!
//! @param[in] なし
//!
//! @return スクリーンの高さ
//------------------------------------------------------------------
float Screen::Height()
{
	return m_size.height;
}



//------------------------------------------------------------------
//! @brief スクリーンの左座標の取得
//!
//! @param[in] なし
//!
//! @return スクリーンの左座標
//------------------------------------------------------------------
float Screen::Left()
{
	return m_position.x;
}



//------------------------------------------------------------------
//! @brief スクリーンの右座標の取得
//!
//! @param[in] なし
//!
//! @return スクリーンの右座標
//------------------------------------------------------------------
float Screen::Right()
{
	return m_position.x + m_size.width;
}



//------------------------------------------------------------------
//! @brief スクリーンの上座標の取得
//!
//! @param[in] なし
//!
//! @return スクリーンの上座標
//------------------------------------------------------------------
float Screen::Top()
{
	return m_position.y;
}



//------------------------------------------------------------------
//! @brief スクリーンの下座標の取得
//!
//! @param[in] なし
//!
//! @return スクリーンの下座標
//------------------------------------------------------------------
float Screen::Bottom()
{
	return m_position.y + m_size.height;
}



//------------------------------------------------------------------
//! @brief スクリーンの中央のX座標の取得
//!
//! @param[in] なし
//!
//! @return スクリーンの中央のX座標
//------------------------------------------------------------------
float Screen::CenterX()
{
	return m_position.x + m_size.width / 2;
}



//------------------------------------------------------------------
//! @brief スクリーンの中央のY座標の取得
//!
//! @param[in] なし
//!
//! @return スクリーンの中央のY座標
//------------------------------------------------------------------
float Screen::CenterY()
{
	return m_position.y + m_size.height / 2;
}
